{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/ContactUs.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","About","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","ContactUs","initialValues","validate","React","values","setValues","errors","setErrors","touched","setTouched","handleBlur","evt","name","rest","error","handleChange","newValue","class","src","alt","formValidation","Object","keys","reduce","acc","key","newError","newTouched","length","every","t","JSON","stringify","axios","post","headers","then","res","console","log","data","autocomplete","for","required","onBlur","email","phone","message","App","API_ENDPOINT","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","json","fetchTask","addTask","method","body","deleteTask","filter","toggleRemainder","taskToToggle","updTask","fieldName","fieldValue","trim","test","basename","path","exact","render","props","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.179fdcc8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({color, text, onClick}) => {\n    return (\n        <button onClick={onClick} style={{backgroundColor : color}} className=\"btn\">\n            {text}\n        </button>\n    );\n}\nButton.defaultProps = {\n    color : 'steelblue'   \n}\n\nButton.propTypes = {\n    color : PropTypes.string,\n    text : PropTypes.string,\n    onClick : PropTypes.func.isRequired\n}\nexport default Button;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\nimport  {useLocation} from 'react-router-dom';\n\nexport const Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation ();\n    return (\n        <div>\n            <header className=\"header\">\n                <h1>{title}</h1>\n                {\n                    location.pathname === '/' ? <Button color={showAdd ? \"red\" : \"green\"} text={ !showAdd ? 'Add' : 'Close'} onClick={onAdd}/> : ''\n                }\n            </header>\n        </div>\n    )\n}\nHeader.defaultProps = {\n    title : 'Task Tracker'\n}\n\nHeader.propTypes ={\n    title : PropTypes.string.isRequired\n}\n\nexport default Header","import {Link} from 'react-router-dom';\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to=\"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import {Link} from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import {FaTimes} from 'react-icons/fa';\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={ () => onToggle (task.id)}>\n            <h3>{task.text} <FaTimes style={{color : 'red', cursor : 'pointer'}} onClick={ () => onDelete (task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n        {tasks.map ( (task) => (\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n        ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react';\n\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState ();\n    const [day, setDay] = useState ();\n    const [reminder, setReminder] = useState ();\n\n    const doOnSubmit = (e) => {\n        e.preventDefault ();\n        if (!text) {\n            alert ('Please add a task');\n            return;\n        }\n\n        if (!day) {\n            alert ('Please add date & time');\n            return;\n        }\n\n        onAdd ({text, day, reminder});\n\n        setText ('');\n        setDay ('');\n        setReminder (false);\n    }\n    return (\n        <form className=\"add-form\" onSubmit={doOnSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add Task\" value={text || ''} onChange={ (e) => {setText (e.target.value)}}></input>\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder=\"Add Day & time\" value={day || ''} onChange={ (e) => {setDay (e.target.value)}}></input>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder || false} value={reminder} onChange={(e) => setReminder (e.currentTarget.checked)}></input>\n            </div>\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\"/>\n        </form>\n    )\n}\n\n<form className=\"add-form\">\n\n</form>\nexport default AddTask\n","import React from 'react'\nimport axios from 'axios';\n\nconst ContactUs = ({ initialValues, validate }) => {\n    const [values, setValues] = React.useState(initialValues);\n    const [errors, setErrors] = React.useState({});\n    const [touched, setTouched] = React.useState({});\n\n    const handleBlur = evt => {\n        const { name, value } = evt.target;\n\n        const { [name] : removedError, ...rest } = errors;\n\n        const error = validate[name](value);\n\n        // validate the field if the value has been touched\n        setErrors({\n            ...rest,\n            ...(error && { [name]: touched[name] && error }),\n        });\n    }\n\n    const handleChange = evt => {\n        const { name, value: newValue, type } = evt.target;\n\n        // keep number fields as numbers\n        const value = type === 'number' ? +newValue : newValue;\n\n        // save field values\n        setValues({\n            ...values,\n            [name]: value,\n        });\n    \n        // was the field modified\n        setTouched({\n            ...touched,\n            [name]: true,\n        });\n\n    }\n    const handleSubmit = evt => {\n        evt.preventDefault ();\n\n        const formValidation = Object.keys (values).reduce (\n            (acc, key) => {\n                const newError = validate[key](values[key]);\n                const newTouched = { [key]: true };\n\n                return {\n                    errors : {\n                        ...acc.errors,\n                        ...(newError && { [key]: newError })\n                    },\n                    touched : {\n                        ...acc.touched,\n                        ...newTouched\n                    }\n                };\n            },\n            {\n                errors : {...errors},\n                touched : {...touched}\n            }\n        );\n        setErrors (formValidation.errors);\n        setTouched (formValidation.touched);\n        if (\n            !Object.values(formValidation.errors).length && // errors object is empty\n            Object.values(formValidation.touched).length ===\n              Object.values(values).length && // all fields were touched\n            Object.values(formValidation.touched).every(t => t === true) // every touched field is true\n        ) {\n            alert(JSON.stringify(values, null, 2));\n            const  headers =  {\n                'Access-Control-Allow-Origin': '*',\n                'Accept': 'application/json;odata.metadata=full',\n              }\n            axios.post(`https://api.altreality.co/dev/contact-us`, values, {headers})\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n        }\n    }\n    return (\n        <div>\n            <div class=\"heading-wrapper\">\n                <h1>Contact Us</h1>\n                <img class=\"text-sep\" src=\"https://d33wubrfki0l68.cloudfront.net/a2344e48fa9ccf9d4a8e2a85bd3e5a8780fbc774/5063b/images/text-sep.png\" alt=\"site component\"></img>\n            </div>\n            <div className=\"wrapper\">\n                <div class=\"contact-us-img-wrapper\">\n                    <img src=\"https://d33wubrfki0l68.cloudfront.net/0ea8e7a9eec9e9128e9076d5b05ef4c3e30d50b0/70205/images/man.png\" alt=\"contact person\"></img>\n                </div>\n                <div>\n                    <div class=\"form-wrapper\">\n                        <form id=\"contactform\" name=\"contact\" onSubmit={handleSubmit} autocomplete=\"off\">\n                            <div class=\"form-control\">\n                                <label for=\"name\"><span>*</span> Name : </label> \n                                <input name=\"name\" class=\"\" id=\"name\" \n                                    placeholder=\"Name\" required=\"\" \n                                    value={values.name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}/>\n                                {touched.name && <span className=\"error-message\">{errors.name}</span>}    \n                            </div>\n                            <div class=\"form-control\">\n                                <label for=\"email\"><span>*</span> Email Id :</label> \n                                <input name=\"email\" type=\"email\" class=\"\" id=\"email\" placeholder=\"abc@xyz.com\"\n                                value={values.email}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                required=\"\" />\n                                {touched.email && <span className=\"error-message\">{errors.email}</span>} \n                            </div>\n                            <div class=\"form-control\">\n                                <label for=\"mobile\"><span>*</span> Mobile Number :</label> \n                                <input name=\"phone\" type=\"tel\" class=\"\" id=\"phone\" placeholder=\"Mobile Number\" required=\"\" \n                                value={values.phone}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                /> \n                                {touched.phone && <span className=\"error-message\">{errors.phone}</span>}\n                            </div>\n                            <div class=\"form-control\">\n                                <label for=\"message\"><span>*</span> Message :</label> \n                                <textarea name=\"message\" class=\"\" id=\"message\" \n                                placeholder=\"Enter your message.....\" required=\"\"\n                                value={values.message}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                ></textarea>\n                                {touched.message && <span className=\"error-message\">{errors.message}</span>}\n                            </div> \n                            <button type=\"submit\" class=\"btn submit-button btn-outline-warning c-submit\">Submit</button>\n                        </form>\n                    </div>    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ContactUs\n","import Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport  {HashRouter as Router, Route} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ContactUs from './components/ContactUs';\n\nconst App = () => {\n  const API_ENDPOINT = 'https://my-json-server.typicode.com/sudikrt/db-demo-repo/tasks';\n  //'http://localhost:5000/tasks'\n  const [showAddTask, setShowAddTask] = useState (false);\n\n  const [tasks, setTasks] = useState ([]);\n\n  useEffect ( () => {\n      const getTasks = async () => {\n        const tasksFromServer = await fetchTasks ();\n        setTasks (tasksFromServer);\n      }\n      getTasks ();\n  }, [])\n\n  //Fetch Tasks \n  const fetchTasks = async () => {\n      const res = await fetch (API_ENDPOINT, {\n        headers : {\n          'Access-Control-Allow-Origin': '*',\n          'Accept': 'application/json;odata.metadata=full',\n        }\n      });\n      const data = await res.json ();\n      return data;\n  }\n  //Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch (`${API_ENDPOINT}/${id}`);\n    const data = await res.json ();\n    return data;\n}\n\n  //Add Task\n  const addTask = async (task) => {\n      const res = await fetch  (API_ENDPOINT,\n        {\n          method : 'POST',\n          headers : {\n            'Content-type' : 'application/json'\n          },\n          body : JSON.stringify (task)\n        }\n      )\n\n      const data = await res.json ();\n      setTasks ([...tasks, data]);\n\n      // const id = Math.floor (Math.random () * 1000);\n      // const newTask = {\n      //   id, ...task\n      // }\n      // setTasks ([...tasks, newTask]);\n  }\n\n  //delete \n  const deleteTask =  async (id) => {\n      await fetch (`${API_ENDPOINT}/${id}`, {\n        method : 'DELETE'\n      })\n      setTasks (tasks.filter (task => task.id !== id));\n  }\n\n  //toggle remainder \n  const toggleRemainder = async (id) => {\n      const taskToToggle = await fetchTask (id);\n      const updTask = {\n        ...taskToToggle, reminder : !taskToToggle.reminder\n      };\n\n      const res = await fetch (`${API_ENDPOINT}/${id}`,\n        {\n          method : 'PUT',\n          headers : {\n            'Content-type' : 'application/JSON'\n          },\n          body : JSON.stringify (updTask)\n        }\n      );\n      const data = await res.json ();\n\n      setTasks (tasks.map ( task => task.id === id ? {...task, reminder : data.reminder} : task))\n  }\n\n\n  //name validation\n  const nameValidation = (fieldName, fieldValue) => {\n      if (fieldValue.trim () === '') {\n          return `${fieldName} is required`;\n      }\n      if (/[^a-zA-Z -]/.test (fieldValue)) {\n          return 'Invalid characters';\n      }\n      if (fieldValue.trim().length < 3) {\n          return `${fieldName} needs to be at least three characters`;\n      }\n      return null;\n  }\n  //email validation\n  const emailValidation = email => {\n      if (/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email,)) {\n        return null;\n      }\n      if (email.trim() === '') {\n        return 'Email is required';\n      }\n      return 'Please enter a valid email';\n  }\n  //message validation\n  const messageValidation = (fieldName, fieldValue) => {\n      if (fieldValue.trim () === '') {\n          return `${fieldName} is required`;\n      }\n      if (fieldValue.trim().length < 30) {\n          return `${fieldName} needs to be at least 30 characters`;\n      }\n      return null;\n  }\n  const phoneValidation = phone => {\n      if (/^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/.test (phone)) {\n          return null\n      }\n      if (phone.trim () === '') {\n          return 'Phone no. is required';  \n      }\n      return 'Please enter a valid Phone number';\n  }\n  const validate = {\n      name: name => nameValidation('Name', name),\n      email: emailValidation,\n      phone : phoneValidation,\n      message : message => messageValidation ('Message', message )\n  };\n  const initialValues = {\n      name: '',\n      email: '',\n      phone : '',\n      message : ''\n  };\n  \n\n  return (\n    <Router basename=\"/\">\n      {\n      <div>\n          <Route path='/' exact render={(props) => (\n            <div className=\"container\">\n              <Header onAdd={() => setShowAddTask (!showAddTask)} showAdd={showAddTask}/>\n              { showAddTask && <AddTask onAdd={addTask}/> }\n              {\n                tasks.length > 0 ? <Tasks tasks={tasks} onToggle={toggleRemainder} onDelete={deleteTask}/> : 'No Tasks to Show'\n              }\n              <Footer/>\n            </div>\n          )}/>\n          <Route path=\"/about\" render={(props) => (\n            <div className=\"container\">\n              <Header onAdd={() => setShowAddTask (!showAddTask)} showAdd={showAddTask}/>\n              <Route path=\"/about\" component={About}/>\n              <Footer/>\n            </div>\n          )}/>\n          {/* <div className=\"container\">\n              <Header onAdd={() => setShowAddTask (!showAddTask)} showAdd={showAddTask}/>\n              <Route path='/' exact render={(props) => (\n                <>\n                  { showAddTask && <AddTask onAdd={addTask}/> }\n                  {\n                    tasks.length > 0 ? <Tasks tasks={tasks} onToggle={toggleRemainder} onDelete={deleteTask}/> : 'No Tasks to Show'\n                  }\n                </>\n              )}/>\n              <Route path=\"/about\" component={About}/>\n              <Footer/>\n          </div> */}\n          <Route path=\"/contact-us\" render={() => (\n              <ContactUs validate={validate} initialValues={initialValues}/>\n          )}/>\n      </div>\n      }\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}