{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","About","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleRemainder","taskToToggle","updTask","basename","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bf9c870.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({color, text, onClick}) => {\n    return (\n        <button onClick={onClick} style={{backgroundColor : color}} className=\"btn\">\n            {text}\n        </button>\n    );\n}\nButton.defaultProps = {\n    color : 'steelblue'   \n}\n\nButton.propTypes = {\n    color : PropTypes.string,\n    text : PropTypes.string,\n    onClick : PropTypes.func.isRequired\n}\nexport default Button;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\nimport  {useLocation} from 'react-router-dom';\n\nexport const Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation ();\n    return (\n        <div>\n            <header className=\"header\">\n                <h1>{title}</h1>\n                {\n                    location.pathname === '/' ? <Button color={showAdd ? \"red\" : \"green\"} text={ !showAdd ? 'Add' : 'Close'} onClick={onAdd}/> : ''\n                }\n            </header>\n        </div>\n    )\n}\nHeader.defaultProps = {\n    title : 'Task Tracker'\n}\n\nHeader.propTypes ={\n    title : PropTypes.string.isRequired\n}\n\nexport default Header","import {Link} from 'react-router-dom';\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to=\"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import {Link} from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import {FaTimes} from 'react-icons/fa';\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={ () => onToggle (task.id)}>\n            <h3>{task.text} <FaTimes style={{color : 'red', cursor : 'pointer'}} onClick={ () => onDelete (task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n        {tasks.map ( (task) => (\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n        ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react';\n\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState ();\n    const [day, setDay] = useState ();\n    const [reminder, setReminder] = useState ();\n\n    const doOnSubmit = (e) => {\n        e.preventDefault ();\n        if (!text) {\n            alert ('Please add a task');\n            return;\n        }\n\n        if (!day) {\n            alert ('Please add date & time');\n            return;\n        }\n\n        onAdd ({text, day, reminder});\n\n        setText ('');\n        setDay ('');\n        setReminder (false);\n    }\n    return (\n        <form className=\"add-form\" onSubmit={doOnSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add Task\" value={text || ''} onChange={ (e) => {setText (e.target.value)}}></input>\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder=\"Add Day & time\" value={day || ''} onChange={ (e) => {setDay (e.target.value)}}></input>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder || false} value={reminder} onChange={(e) => setReminder (e.currentTarget.checked)}></input>\n            </div>\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\"/>\n        </form>\n    )\n}\n\n<form className=\"add-form\">\n\n</form>\nexport default AddTask\n","import Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport  {HashRouter as Router, Route} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState (false);\n\n  const [tasks, setTasks] = useState ([]);\n\n  useEffect ( () => {\n      const getTasks = async () => {\n        const tasksFromServer = await fetchTasks ();\n        setTasks (tasksFromServer);\n      }\n      getTasks ();\n  }, [])\n\n  //Fetch Tasks \n  const fetchTasks = async () => {\n      const res = await fetch ('http://localhost:5000/tasks');\n      const data = await res.json ();\n      return data;\n  }\n  //Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch (`http://localhost:5000/tasks/${id}`);\n    const data = await res.json ();\n    return data;\n}\n\n  //Add Task\n  const addTask = async (task) => {\n      const res = await fetch  ('http://localhost:5000/tasks',\n        {\n          method : 'POST',\n          headers : {\n            'Content-type' : 'application/json'\n          },\n          body : JSON.stringify (task)\n        }\n      )\n\n      const data = await res.json ();\n      setTasks ([...tasks, data]);\n\n      // const id = Math.floor (Math.random () * 1000);\n      // const newTask = {\n      //   id, ...task\n      // }\n      // setTasks ([...tasks, newTask]);\n  }\n\n  //delete \n  const deleteTask =  async (id) => {\n      await fetch (`http://localhost:5000/tasks/${id}`, {\n        method : 'DELETE'\n      })\n      setTasks (tasks.filter (task => task.id !== id));\n  }\n\n  //toggle remainder \n  const toggleRemainder = async (id) => {\n      const taskToToggle = await fetchTask (id);\n      const updTask = {\n        ...taskToToggle, reminder : !taskToToggle.reminder\n      };\n\n      const res = await fetch (`http://localhost:5000/tasks/${id}`,\n        {\n          method : 'PUT',\n          headers : {\n            'Content-type' : 'application/JSON'\n          },\n          body : JSON.stringify (updTask)\n        }\n      );\n      const data = await res.json ();\n\n      setTasks (tasks.map ( task => task.id === id ? {...task, reminder : data.reminder} : task))\n  }\n\n  return (\n    <Router basename=\"/\">\n      <div className=\"container\">\n          <Header onAdd={() => setShowAddTask (!showAddTask)} showAdd={showAddTask}/>\n          <Route path='/' exact render={(props) => (\n            <>\n              { showAddTask && <AddTask onAdd={addTask}/> }\n              {\n                tasks.length > 0 ? <Tasks tasks={tasks} onToggle={toggleRemainder} onDelete={deleteTask}/> : 'No Tasks to Show'\n              }\n            </>\n          )}/>\n          <Route path=\"/about\" component={About}/>\n          <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}